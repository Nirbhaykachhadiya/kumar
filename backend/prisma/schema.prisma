// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id Int @id @default(autoincrement())
  userName String @unique
  password String
  role String
  listedQues Que[] @relation("listed")
  PurchasedQues TempOrder[] @relation("purchased")
  Papers Paper[]@relation("paper")
}

model Que {
  id Int @id @default(autoincrement())
  chepter String
  question String
  option1 String 
  option2 String
  option3 String
  option4 String
  answer String
  queSeterId Int
  paperId     Int?
  order TempOrder[] @relation("order")
  queSeter User @relation("listed",fields: [queSeterId],references: [id])
  paper Paper ?@relation("que", fields: [paperId], references: [id])
  }


  model TempOrder{
    id Int @id @default(autoincrement())
    queId Int
    buyerId Int
    buyer User @relation("purchased",fields: [buyerId],references: [id])
    question Que @relation("order",fields: [queId],references: [id])
    

  }

  model Paper{
    id Int @id @default(autoincrement())
    createrId Int
    Questions Que[] @relation("que")
    creater User @relation("paper",fields: [createrId],references: [id])
  }